version: "3"

services:
  nuxt-docker-example:
    container_name: nuxt-docker-example
    build:
      target: builder
      context: ./nuxt
      dockerfile: ./Dockerfile
    env_file:
      - .env
    command: yarn dev --force
    volumes:
      - ./nuxt:/nuxt

  # strapi:
  #   image: strapi/strapi
  #   restart: always
  #   ports:
  #     - 4000:80
  #   volumes:
  #     - ./strapi:/srv/app
  #   environment:
  #     DATABASE_CLIENT: postgres
  #     DATABASE_HOST: db
  #     DATABASE_PORT: 5432
  #     DATABASE_NAME: strapi
  #     DATABASE_USERNAME: strapi
  #     DATABASE_PASSWORD: strapi
  #     PORT: 80
  #   depends_on:
  #     - db
  #   networks:
  #     - strapi-net
  #     - traefik-gateway

  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=traefik-gateway"
  #     - "traefik.http.routers.strapi.rule=Host(`strapi.nuxt-cms.localhost`)"
  #     - "traefik.http.routers.strapi.entrypoints=http"
  #     - "traefik.http.routers.nuxt-cms.tls=false"

  strapi:
    container_name: strapi
    build:
      context: ./strapi
      dockerfile: ./Dockerfile
    env_file: .env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-gateway"
      - "traefik.http.routers.strapi.rule=Host(`strapi.nuxt-cms.localhost`)"
      - "traefik.http.routers.strapi.entrypoints=http"
      - "traefik.http.routers.strapi.tls=false"
      - "traefik.http.services.strapi.loadbalancer.server.port=80"
    ports:
      - '4000:80'
    # environment:
      # DATABASE_CLIENT: ${DATABASE_CLIENT}
      # DATABASE_HOST: db
      # DATABASE_PORT: ${DATABASE_PORT}
      # DATABASE_NAME: ${DATABASE_NAME}
      # DATABASE_USERNAME: ${DATABASE_USERNAME}
      # DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      # JWT_SECRET: ${JWT_SECRET}
      # ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      # APP_KEYS: ${APP_KEYS}
      # NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/package.json
      - ./strapi/yarn.lock:/opt/yarn.lock
      - ./strapi/.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    networks:
      - strapi-net
      - traefik-gateway
    depends_on:
      - db

    
  db:
    image: postgres:14.1-alpine
    user: 1000:1000
    environment:
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
      POSTGRES_DB: strapi
    ports:
      - '5432:5432'
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - strapi-net
      - traefik-gateway

  nginx:
    image: nginx:1.15
    working_dir: /var/www/html
    depends_on:
      - nuxt-docker-example
    networks:
      - default
      - traefik-gateway
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-gateway"
      - "traefik.http.routers.nuxt-app-nginx.rule=Host(`nuxt-cms.localhost`)"
      - "traefik.http.routers.nuxt-app-nginx.entrypoints=http"
      - "traefik.http.routers.nuxt-app-nginx.tls=false"
    volumes:
      # - ./nuxt-app:/var/www/html/nuxt-app
      # - ./config/nginx/includes:/etc/nginx/includes:ro
      - ./nuxt/nginx/nginx.conf:/etc/nginx/nginx.conf

networks:
  traefik-gateway:
    name: traefik-gateway
    external: true
  strapi-net:
    name: strapi
volumes:
  db:
    driver: local
